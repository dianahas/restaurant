/**
 * Foundation for Sites by ZURB
 * Version 6.2.3
 * foundation.zurb.com
 * Licensed under MIT Open Source
 */
/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */
/**
   * 1. Set default font family to sans-serif.
   * 2. Prevent iOS and IE text size adjust after device orientation change,
   *    without disabling user zoom.
   */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
   * Remove default margin.
   */
body {
  margin: 0; }

/* HTML5 display definitions
     ========================================================================== */
/**
   * Correct `block` display not defined for any HTML5 element in IE 8/9.
   * Correct `block` display not defined for `details` or `summary` in IE 10/11
   * and Firefox.
   * Correct `block` display not defined for `main` in IE 11.
   */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block; }

/**
   * 1. Correct `inline-block` display not defined in IE 8/9.
   * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
   */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
   * Prevent modern browsers from displaying `audio` without controls.
   * Remove excess height in iOS 5 devices.
   */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
   * Address `[hidden]` styling not present in IE 8/9/10.
   * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.
   */
[hidden],
template {
  display: none; }

/* Links
     ========================================================================== */
/**
   * Remove the gray background color from active links in IE 10.
   */
a {
  background-color: transparent; }

/**
   * Improve readability of focused elements when they are also in an
   * active/hover state.
   */
a:active,
a:hover {
  outline: 0; }

/* Text-level semantics
     ========================================================================== */
/**
   * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
   */
abbr[title] {
  border-bottom: 1px dotted; }

/**
   * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
   */
b,
strong {
  font-weight: bold; }

/**
   * Address styling not present in Safari and Chrome.
   */
dfn {
  font-style: italic; }

/**
   * Address variable `h1` font-size and margin within `section` and `article`
   * contexts in Firefox 4+, Safari, and Chrome.
   */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
   * Address styling not present in IE 8/9.
   */
mark {
  background: #ff0;
  color: #000; }

/**
   * Address inconsistent and variable font size in all browsers.
   */
small {
  font-size: 80%; }

/**
   * Prevent `sub` and `sup` affecting `line-height` in all browsers.
   */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* Embedded content
     ========================================================================== */
/**
   * Remove border when inside `a` element in IE 8/9/10.
   */
img {
  border: 0; }

/**
   * Correct overflow not hidden in IE 9/10/11.
   */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
     ========================================================================== */
/**
   * Address margin not present in IE 8/9 and Safari.
   */
figure {
  margin: 1em 40px; }

/**
   * Address differences between Firefox and other browsers.
   */
hr {
  box-sizing: content-box;
  height: 0; }

/**
   * Contain overflow in all browsers.
   */
pre {
  overflow: auto; }

/**
   * Address odd `em`-unit font size rendering in all browsers.
   */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

/* Forms
     ========================================================================== */
/**
   * Known limitation: by default, Chrome and Safari on OS X allow very limited
   * styling of `select`, unless a `border` property is set.
   */
/**
   * 1. Correct color not being inherited.
   *    Known issue: affects color of disabled elements.
   * 2. Correct font properties not being inherited.
   * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
   */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
   * Address `overflow` set to `hidden` in IE 8/9/10/11.
   */
button {
  overflow: visible; }

/**
   * Address inconsistent `text-transform` inheritance for `button` and `select`.
   * All other form control elements do not inherit `text-transform` values.
   * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
   * Correct `select` style inheritance in Firefox.
   */
button,
select {
  text-transform: none; }

/**
   * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
   *    and `video` controls.
   * 2. Correct inability to style clickable `input` types in iOS.
   * 3. Improve usability and consistency of cursor style between image-type
   *    `input` and others.
   */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
   * Re-set default cursor for disabled elements.
   */
button[disabled],
html input[disabled] {
  cursor: not-allowed; }

/**
   * Remove inner padding and border in Firefox 4+.
   */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
   * Address Firefox 4+ setting `line-height` on `input` using `!important` in
   * the UA stylesheet.
   */
input {
  line-height: normal; }

/**
   * It's recommended that you don't attempt to style these elements.
   * Firefox's implementation doesn't respect box-sizing, padding, or width.
   *
   * 1. Address box sizing set to `content-box` in IE 8/9/10.
   * 2. Remove excess padding in IE 8/9/10.
   */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
   * Fix the cursor style for Chrome's increment/decrement buttons. For certain
   * `font-size` values of the `input`, it causes the cursor style of the
   * decrement button to change from `default` to `text`.
   */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
   * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
   * 2. Address `box-sizing` set to `border-box` in Safari and Chrome.
   */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  box-sizing: content-box;
  /* 2 */ }

/**
   * Remove inner padding and search cancel button in Safari and Chrome on OS X.
   * Safari (but not Chrome) clips the cancel button when the search input has
   * padding (and `textfield` appearance).
   */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
   * Define consistent border, margin, and padding.
   * [NOTE] We don't enable this ruleset in Foundation, because we want the <fieldset> element to have plain styling.
   */
/* fieldset {
    border: 1px solid #c0c0c0;
    margin: 0 2px;
    padding: 0.35em 0.625em 0.75em;
  } */
/**
   * 1. Correct `color` not being inherited in IE 8/9/10/11.
   * 2. Remove padding so people aren't caught out if they zero out fieldsets.
   */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
   * Remove default vertical scrollbar in IE 8/9/10/11.
   */
textarea {
  overflow: auto; }

/**
   * Don't inherit the `font-weight` (applied by a rule above).
   * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
   */
optgroup {
  font-weight: bold; }

/* Tables
     ========================================================================== */
/**
   * Remove most spacing between table cells.
   */
table {
  border-collapse: collapse;
  border-spacing: 0; }

td,
th {
  padding: 0; }

.foundation-mq {
  font-family: "small=0em&medium=40em&large=64em&xlarge=75em&xxlarge=90em"; }

html {
  font-size: 100%;
  box-sizing: border-box; }

*,
*::before,
*::after {
  box-sizing: inherit; }

body {
  padding: 0;
  margin: 0;
  font-family: "Helvetica Neue", Helvetica, Roboto, Arial, sans-serif;
  font-weight: normal;
  line-height: 1.5;
  color: #0a0a0a;
  background: #fefefe;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }

img {
  max-width: 100%;
  height: auto;
  -ms-interpolation-mode: bicubic;
  display: inline-block;
  vertical-align: middle; }

textarea {
  height: auto;
  min-height: 50px;
  border-radius: 0; }

select {
  width: 100%;
  border-radius: 0; }

#map_canvas img,
#map_canvas embed,
#map_canvas object,
.map_canvas img,
.map_canvas embed,
.map_canvas object,
.mqa-display img,
.mqa-display embed,
.mqa-display object {
  max-width: none !important; }

button {
  -webkit-appearance: none;
  -moz-appearance: none;
  background: transparent;
  padding: 0;
  border: 0;
  border-radius: 0;
  line-height: 1; }
  [data-whatinput='mouse'] button {
    outline: 0; }

.is-visible {
  display: block !important; }

.is-hidden {
  display: none !important; }

body {
  font-family: 'Lato', sans-serif;
  font-size: 16px; }

.mt-5 {
  margin-top: 5px; }

.mt-10 {
  margin-top: 10px; }

.mt-15 {
  margin-top: 15px; }

.mt-20 {
  margin-top: 20px; }

.mt-25 {
  margin-top: 25px; }

.mt-30 {
  margin-top: 30px; }

.mt-35 {
  margin-top: 35px; }

.mt-40 {
  margin-top: 40px; }

.mt-45 {
  margin-top: 45px; }

.mt-50 {
  margin-top: 50px; }

.mr-5 {
  margin-right: 5px; }

.mr-10 {
  margin-right: 10px; }

.mr-15 {
  margin-right: 15px; }

.mr-20 {
  margin-right: 20px; }

.mr-25 {
  margin-right: 25px; }

.mr-30 {
  margin-right: 30px; }

.mr-35 {
  margin-right: 35px; }

.mr-40 {
  margin-right: 40px; }

.mr-45 {
  margin-right: 45px; }

.mr-50 {
  margin-right: 50px; }

.margin-bottom-5 {
  margin-bottom: 5px; }

.margin-bottom-10 {
  margin-bottom: 10px; }

.margin-bottom-15 {
  margin-bottom: 15px; }

.margin-bottom-20 {
  margin-bottom: 20px; }

.margin-bottom-25 {
  margin-bottom: 25px; }

.margin-bottom-30 {
  margin-bottom: 30px; }

.margin-bottom-35 {
  margin-bottom: 35px; }

.margin-bottom-40 {
  margin-bottom: 40px; }

.margin-bottom-45 {
  margin-bottom: 45px; }

.margin-bottom-50 {
  margin-bottom: 50px; }

.margin-left-5 {
  margin-left: 5px; }

.margin-left-10 {
  margin-left: 10px; }

.margin-left-15 {
  margin-left: 15px; }

.margin-left-20 {
  margin-left: 20px; }

.margin-left-25 {
  margin-left: 25px; }

.margin-left-30 {
  margin-left: 30px; }

.margin-left-35 {
  margin-left: 35px; }

.margin-left-40 {
  margin-left: 40px; }

.margin-left-45 {
  margin-left: 45px; }

.margin-left-50 {
  margin-left: 50px; }

.section {
  padding: 4% 0;
  background-color: #F5F3F1; }
  .section__container {
    max-width: 1000px;
    margin: 0 auto;
    padding: 0 20px; }
  .section__title {
    font-size: 18px;
    font-weight: bold;
    margin-bottom: 20px;
    text-align: center;
    text-transform: uppercase; }
  .section__subtitle {
    font-size: 20px;
    font-weight: 400;
    font-style: italic;
    max-width: 500px;
    margin: 0 auto 35px auto;
    text-align: center; }

.error {
  display: none; }

.error_show {
  color: red; }

input.invalid, textarea.invalid {
  border: 4px solid red; }

input.valid, textarea.valid {
  border: 4px solid green; }

.focusField {
  border: solid 2px #73A6FF;
  background: #EFF5FF;
  color: #000; }

.focusField {
  border: solid 2px #73A6FF;
  background: #EFF5FF;
  color: #000; }

footer {
  width: 100%;
  height: 68px;
  background: #a7cfdf;
  /* FF3.6-15 */
  /* Chrome10-25,Safari5.1-6 */
  background: linear-gradient(to right, #37C56D 0%, #D7DF30 100%);
  /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#37C56D', endColorstr='#D7DF30',GradientType=1 );
  /* IE6-9 */ }

.copyright {
  font-family: 'Open Sans',sans-serif;
  font-size: 20px;
  font-weight: bold;
  color: white; }

.menu {
  width: 100%;
  max-width: 100%;
  height: 130px;
  background: #a7cfdf;
  /* Old browsers */
  /* FF3.6-15 */
  /* Chrome10-25,Safari5.1-6 */
  background: linear-gradient(to right, #37C56D 0%, #D7DF30 100%);
  /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#37C56D', endColorstr='#D7DF30',GradientType=1 );
  /* IE6-9 */ }

.accountwelcome {
  color: white;
  font-size: 25px;
  width: 100px;
  white-space: nowrap; }

.imageacc {
  width: 100%;
  height: 88px;
  max-width: 117px; }

.usermenu {
  width: 500px; }

.addlogo {
  height: 70px;
  max-width: 370px;
  width: 357px; }

.assistlogo {
  background-image: url("../images/mobileicon.png");
  width: 60px;
  max-width: 150px;
  background-size: cover;
  height: 60px; }

.imgmenu {
  width: 80px;
  height: 40px; }

.menu-content a {
  color: white;
  text-decoration: none;
  background-color: #90D44B;
  border-right: 2px solid white;
  font-size: 20px;
  width: 100%;
  max-width: 160px; }

.menu-content {
  max-width: 900px;
  width: 100%; }

.button--state-success {
  height: 85px;
  width: 395px;
  border-radius: 9px;
  color: #FFF;
  background: #606c88;
  font-size: 23px;
  border-color: #4A993E; }

.form__button {
  height: 85px;
  width: 395px;
  border-radius: 9px;
  color: #FFF;
  background: #7FD151;
  font-size: 23px;
  border-color: #4A993E;
  width: 100%; }

.order__button {
  width: 264px;
  background-color: #7FD151; }

.viewinput {
  text-align: center; }

.dropbtn {
  float: left; }

.stylizing {
  text-decoration: none;
  color: white;
  padding-top: 20px; }

table {
  box-shadow: 4px 4px 8px 2px rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
  width: 1168px;
  overflow-y: scroll;
  height: 988px;
  margin-bottom: 90px;
  padding-bottom: 50px; }

thead, tbody {
  max-width: 580px; }

th {
  color: white;
  background-color: #56CF90;
  font-size: 24px;
  height: 43px; }

tr {
  height: 48px;
  width: 400px; }

tbody {
  background-color: white; }

td:first-child {
  font-size: 26px; }

td:nth-child(2) {
  font-size: 26px;
  border-right: none;
  width: 500px; }

td:nth-child(3) {
  font-size: 26px;
  width: 500px; }

th {
  text-align: justify; }

th:nth-child(2) {
  border-right: none;
  width: 520px; }

th:nth-child(3) {
  border-right: none; }

.wrapper {
  height: 1090px;
  width: 100%;
  white-space: nowrap;
  max-width: 100%;
  margin-top: -90px;
  margin-bottom: 130px; }

.content {
  overflow-x: auto;
  overflow-y: hidden; }

html {
  position: relative;
  min-height: 100%; }

body {
  margin: 0 0 100px; }

body {
  position: relative;
  margin: 0;
  padding: 0; }

.form__button {
  display: block;
  margin: 10px;
  margin-top: 60px; }

.button--state-success {
  margin-top: 34px;
  margin-bottom: 35px;
  text-align: center;
  border-radius: 9px; }

.addbtn {
  margin-top: 48px;
  margin-bottom: 145px; }

.btn {
  display: inline-block;
  padding: 15px 32px;
  text-align: center; }

.menu {
  position: fixed;
  margin-top: -20px;
  margin-left: -2px; }

.mlabel {
  display: inline-block;
  margin-bottom: 10px;
  padding-right: 15px;
  padding-left: 15px;
  vertical-align: bottom; }

.alignment {
  padding-top: 23px;
  padding-left: 23px;
  text-align: left;
  margin-top: 22px; }

.menu {
  position: fixed;
  margin-top: -20px;
  margin-left: -2px;
  z-index: 20;
  top: 0px;
  left: 0;
  display: block; }

footer {
  position: fixed;
  bottom: 0;
  left: 0;
  z-index: 20; }

.copyright {
  margin-top: 18px;
  text-align: center;
  padding-top: 4px; }

table {
  display: block;
  margin: 0 auto;
  margin-top: 30px; }

table::-webkit-scrollbar {
  background-color: #fff; }
  table::-webkit-scrollbar table-thumb {
    background-color: #606c88; }
    table::-webkit-scrollbar table-thumb table:hover {
      background-color: #606c88; }

tr {
  text-align: center; }

th {
  text-align: center; }

td:first-child {
  padding-left: 74px; }

td:nth-child(2) {
  padding-left: 127px; }

td:nth-child(3) {
  padding-left: 111px;
  text-align: justify; }

th {
  text-align: justify; }

th:first-child {
  padding-left: 113px; }

th:nth-child(2) {
  padding-left: 255px; }

th:nth-child(3) {
  padding-left: 212px; }

.wrapper {
  margin-bottom: 50px;
  text-align: center; }

.content {
  margin-left: 20px;
  margin-right: 12px;
  margin-top: 160px; }

.page-register {
  position: relative; }

.page-register .card {
  margin-top: 50px; }

.page-register {
  position: relative;
  z-index: 1;
  background-image: url("../images/sasa.jpeg");
  background-repeat: no-repeat;
  background-position: 50% 50%;
  background-size: cover;
  padding-top: 70px;
  padding-bottom: 100px; }

.page-register:before {
  position: absolute;
  z-index: 2;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  content: '';
  opacity: .3;
  background: #f2f5f6;
  /* Old browsers */
  /* FF3.6-15 */
  /* Chrome10-25,Safari5.1-6 */
  background: linear-gradient(to right, #f2f5f6 0%, #e3eaed 37%, #c8d7dc 100%);
  /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#f2f5f6', endColorstr='#c8d7dc',GradientType=1 );
  /* IE6-9 */ }

.gradientone {
  background-image: url("/static/assets/images/spaghetti.png");
  padding-bottom: 50px; }

.gradientone:before {
  background: #f2f5f6;
  /* Old browsers */
  /* FF3.6-15 */
  /* Chrome10-25,Safari5.1-6 */
  background: linear-gradient(to right, #f2f5f6 0%, #e3eaed 37%, #c8d7dc 100%);
  /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#f2f5f6', endColorstr='#c8d7dc',GradientType=1 );
  /* IE6-9 */ }

.gradienttwo {
  background-image: url("/static/assets/images/meniu1.png"); }

.gradientwo:before {
  background: #f2f5f6;
  /* Old browsers */
  /* FF3.6-15 */
  /* Chrome10-25,Safari5.1-6 */
  background: linear-gradient(to right, #f2f5f6 0%, #e3eaed 37%, #c8d7dc 100%);
  /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#f2f5f6', endColorstr='#c8d7dc',GradientType=1 );
  /* IE6-9 */ }

.gradientthree {
  background-image: url("../images/sasa.jpeg"); }

.gradientthree:before {
  background: #f2f5f6;
  /* Old browsers */
  /* FF3.6-15 */
  /* Chrome10-25,Safari5.1-6 */
  background: linear-gradient(to right, #f2f5f6 0%, #e3eaed 37%, #c8d7dc 100%);
  /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#f2f5f6', endColorstr='#c8d7dc',GradientType=1 );
  /* IE6-9 */ }

@media all and (max-width: 875px) {
  .accountwelcome {
    display: none !important; }
  .imageacc {
    margin-left: 126px; }
  .addlogo {
    padding-left: 70px; } }

@media all and (max-width: 1275px) {
  .menu-content {
    display: none !important; } }

@media all and (min-width: 785px) {
  .dropdown {
    display: none; }
  .accountwelcome {
    padding-left: 100px; }
  .menu-content {
    padding: 8px; } }

.alignment {
  padding-top: 2px; }

@media all and (min-width: 1300px) and (max-width: 1300px) {
  .accountwelcome {
    padding-left: 30px; } }

@media only screen and (max-width: 1374px) {
  .addlogo {
    max-width: 230px;
    height: 50px;
    margin-left: 50px;
    margin-top: -25px; }
  .imageacc {
    position: fixed;
    float: right;
    top: 20px;
    right: 30px;
    width: 200px;
    height: 100px; }
  .dropdown {
    display: block !important; } }

.error_show {
  margin-left: 10px; }

.error {
  margin-left: 10px; }

.card {
  margin: 0 auto;
  padding: 20px; }

.alignment {
  text-align: left; }

.form {
  margin-top: 10px;
  margin: 0 auto; }

.form__group {
  margin-bottom: 10px; }

.form__component {
  display: block;
  margin-bottom: 19px; }

.form__input {
  padding: 20px;
  margin-bottom: 36px; }

.form__inputformtwo {
  margin-top: 50px; }

.accountwelcome {
  margin-right: 13px;
  float: left;
  padding-right: 18px;
  margin-top: 33px;
  display: inline-block; }

.imageacc {
  display: inline-block;
  padding-left: 25px;
  float: right;
  margin-top: 5px;
  content: url("/static/assets/images/Alexanders.png"); }

.usermenu {
  text-align: center;
  float: right;
  padding-right: 30px; }

.assistlogo {
  float: left;
  position: fixed;
  z-index: 1000;
  vertical-align: baseline; }

.addlogo {
  position: fixed;
  content: url("../images/logo.png");
  z-index: 1000;
  vertical-align: baseline;
  padding-left: 10px;
  margin-top: 10px; }

.dropdown {
  position: relative;
  display: block;
  margin-top: 7px;
  float: left; }

.dropdown-content {
  padding-top: 40px;
  margin-top: 61px;
  display: none; }

.dropdown-content a {
  padding: 12px 16px;
  display: block; }

.dropdown:hover .dropdown-content {
  display: inline-block; }

.menu-content a {
  margin-right: 10px;
  display: inline;
  padding: 0 20px;
  margin: 0 auto; }

.menu-content {
  margin: 0 auto;
  margin-top: 28px;
  padding-left: 190px; }

.card {
  background: #FFF;
  border-radius: 10px;
  max-width: 603px;
  width: 100%;
  box-shadow: 0 1px 5px #C2C2C2; }

.form {
  max-width: 450px;
  width: 100%;
  height: 759px; }

.form__component {
  color: #C2C2C2;
  width: 100%; }

.form__label {
  font-size: 20px; }

.form__input {
  font-size: 18px;
  border-radius: 8px;
  text-align: center;
  border: 1px solid #C2C2C2; }

.form__inputformtwo {
  font-weight: bold;
  font-size: 22px; }

/* The container <div> - needed to position the dropdown content */
.dropdown {
  width: 60px;
  max-width: 200px;
  width: 100%;
  display: none; }

/* Dropdown Content (Hidden by Default) */
.dropdown-content {
  background-color: #f9f9f9;
  min-width: 160px;
  box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2); }

.dropbtn {
  color: white;
  font-size: 16px;
  border: none;
  cursor: pointer; }

/* Links inside the dropdown */
.dropdown-content a {
  color: black;
  text-decoration: none; }

/* Change color of dropdown links on hover */
.dropdown-content a:hover {
  background-color: #f1f1f1; }

/* Show the dropdown menu on hover */
/* Change the background color of the dropdown button when the dropdown content is shown */
.dropdown:hover .dropbtn {
  background-color: #3e8e41; }

/* Change color of dropdown links on hover */
.dropdown-content a:hover {
  background-color: #606c88; }

/* Show the dropdown menu on hover */
/* Change the background color of the dropdown button when the dropdown content is shown */
.dropdown:hover .dropbtn {
  background-color: #606c88; }

/*# sourceMappingURL=data:application/json;base64, */
